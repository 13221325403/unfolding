<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="unfolding" default="main" basedir=".">
	
	<property name="project.name" value="unfolding" />
	<property name="project.version" value="0.9.0" />
	
	<property name="project.jar.name" value="${project.name}-${project.version}.jar"/>
	
	<!-- Sets variables which can later be used. -->
	<!-- The value of a property is accessed via ${} -->
	<property name="src.dir" location="src" />
	<property name="build.dir" location="build" />
	<property name="dist.dir" location="dist" />
	<property name="docs.dir" location="doc" />
	<property name="lib.dir" location="lib" />

	<!-- Variables used for JUnit testin -->
	<property name="test.dir" location="test" />
	<property name="test.report.dir" location="testreport" />
	
	<!--
		Create a classpath container which can be later used in the ant task
	-->
	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="**.jar" />
		</fileset>
	</path>

	<!-- Define the classpath which includes the junit.jar and the classes after compiling-->
	<path id="junit.class.path">
		<pathelement location="lib/junit-4.10.jar" />
		<pathelement location="${build.dir}" />
	</path>
	
	<!-- Deletes the existing build, docs and dist directory-->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${docs.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${test.report.dir}" />
	</target>

	<!-- Creates the  build, docs and dist directory-->
	<target name="makedir">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${docs.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${test.report.dir}" />
	</target>

	<!-- Creates Javadoc -->
	<target name="docs">
		<javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}" classpathref="build.classpath">
			<!-- Define which files / directory should get included, we include all -->
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</javadoc>
	</target>

	<!-- Compiles the java code (including the usage of library for JUnit -->
	<target name="compile" depends="clean, makedir">
		<javac srcdir="${src.dir}" destdir="${build.dir}" >
			<classpath refid="build.classpath" />
			<!-- <classpath refid="junit.class.path" /> -->
		</javac>
	</target>
	
	<target name="compile-test" depends="compile">
		<javac srcdir="${test.dir}" destdir="${build.dir}" >
			<classpath refid="build.classpath" />
			<!-- <classpath refid="junit.class.path" /> -->
		</javac>
	</target>
	
	<!-- Run the JUnit Tests -->
	<!-- Output is XML, could also be plain-->
	<!-- NOTE: This is not working yet -->
	<target name="junit" depends="compile-test">
		<junit printsummary="on" fork="false" haltonfailure="yes">
			<classpath refid="junit.class.path" />
			<formatter type="xml" />
			<batchtest todir="${test.report.dir}">
				<fileset dir="${build.dir}">
					<include name="**/*Test*.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!--Creates the deployable jar file  -->
	<target name="jar" depends="compile">
		<jar destfile="${dist.dir}\${project.jar.name}" basedir="${build.dir}">
			<!-- <manifest> -->
			<!-- 	<attribute name="Main-Class" value="test.Main" /> -->
			<!-- </manifest> -->
		</jar>
	</target>


	<!--
		 Create the folder structure for a simple eclipse project including all
		 libs and some demos.
	 -->
	<target name="unfolding_app_template" depends="jar">
		<!-- create all folders -->
		<mkdir dir="${dist.dir}/unfolding_app_template" />
		<mkdir dir="${dist.dir}/unfolding_app_template/bin" />
		<mkdir dir="${dist.dir}/unfolding_app_template/data" />
		<mkdir dir="${dist.dir}/unfolding_app_template/lib" />
		<mkdir dir="${dist.dir}/unfolding_app_template/libNative" />
		<mkdir dir="${dist.dir}/unfolding_app_template/src" />
		<!-- copy all libs -->
		<copy todir="${dist.dir}/unfolding_app_template/lib/">
			<fileset dir="lib" />
		</copy>	
		<copy todir="${dist.dir}/unfolding_app_template/libNative/">
			<fileset dir="libNative" />
		</copy>	
		<!-- copy our current unfolding jar -->
		<copy file="${dist.dir}/${project.jar.name}" todir="${dist.dir}/unfolding_app_template/lib/" />
		<!-- copy some example src -->
		<copy file="examples/HelloUnfoldingWorld.java" todir="${dist.dir}/unfolding_app_template/src/" />
		<copy file="examples/MBTilesMapApp.java" todir="${dist.dir}/unfolding_app_template/src/" />
		<copy file="examples/SimpleMapApp.java" todir="${dist.dir}/unfolding_app_template/src/" />
		<!-- copy .classpath and .project -->
		<copy file="resources/unfolding_app_template/classpath" todir="${dist.dir}/unfolding_app_template/.classpath/" />
		<copy file="resources/unfolding_app_template/project" todir="${dist.dir}/unfolding_app_template/.project" />
		<zip destfile="${dist.dir}/unfolding_app_template.zip"
			basedir="${dist.dir}/unfolding_app_template/"
		/>
	</target>


	<target name="main" depends="docs, jar">
		<description>Main target</description>
	</target>

</project>
